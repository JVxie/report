<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jvxie.report.mappers.ClassMapper">
  <resultMap id="BaseResultMap" type="com.jvxie.report.models.Class">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="abbr_name" jdbcType="VARCHAR" property="abbrName" />
    <result column="num" jdbcType="INTEGER" property="num" />
    <result column="grade_id" jdbcType="INTEGER" property="gradeId" />
    <result column="major_id" jdbcType="INTEGER" property="majorId" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="deleted_at" jdbcType="TIMESTAMP" property="deletedAt" />
  </resultMap>
  <sql id="Base_Column_List">
    id, abbr_name, num, grade_id, major_id, created_at, updated_at, deleted_at
  </sql>
  <select id="selectById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from class
    where id = #{id,jdbcType=INTEGER}
    and deleted_at is null
  </select>
  <select id="selectList" resultType="com.jvxie.report.models.Class">
    select
    <include refid="Base_Column_List" />
    from class
    where deleted_at is null
    <if test="idBefore != null and idAfter != null">
      and id between #{idBefore,jdbcType=INTEGER} and #{idAfter,jdbcType=INTEGER}
    </if>
    <if test="idSet != null and idSet.size() > 0">
      and id in
      <foreach collection="idSet" item="item" index="index" open="(" separator="," close=")">
        #{item}
      </foreach>
    </if>
    <if test="abbrName != null">
      and abbr_name like concat('%', #{abbrName,jdbcType=VARCHAR}, '%')
    </if>
    <if test="num != null">
      and num = #{num,jdbcType=INTEGER}
    </if>
    <if test="gradeId != null">
      and grade_id = #{gradeId,jdbcType=INTEGER}
    </if>
    <if test="majorId != null">
      and major_id = #{majorId,jdbcType=INTEGER}
    </if>
    <if test="createdAtBefore != null and createdAtAfter != null">
      and created_at between #{createdAtBefore,jdbcType=TIMESTAMP} and #{createdAtAfter,jdbcType=TIMESTAMP}
    </if>
    <if test="updatedAtBefore != null and updatedAtAfter != null">
      and updated_at between #{updatedAtBefore,jdbcType=TIMESTAMP} and #{updatedAtAfter,jdbcType=TIMESTAMP}
    </if>

  </select>
  <select id="selectByIndex" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from  class
    where deleted_at is null
    <if test="num != null">
      and num = #{num,jdbcType=INTEGER}
    </if>
    <if test="gradeId != null">
      and grade_id = #{gradeId,jdbcType=INTEGER}
    </if>
    <if test="majorId != null">
      and major_id = #{majorId,jdbcType=INTEGER}
    </if>
  </select>
  <update id="deleteById" parameterType="java.lang.Integer">
    update class
    set deleted_at = now()
    where id = #{id,jdbcType=INTEGER}
    and deleted_at is null
  </update>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.jvxie.report.models.Class" useGeneratedKeys="true">
    insert into class
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="abbrName != null">
        abbr_name,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="gradeId != null">
        grade_id,
      </if>
      <if test="majorId != null">
        major_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="abbrName != null">
        #{abbrName,jdbcType=VARCHAR},
      </if>
      <if test="num != null">
        #{num,jdbcType=INTEGER},
      </if>
      <if test="gradeId != null">
        #{gradeId,jdbcType=INTEGER},
      </if>
      <if test="majorId != null">
        #{majorId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByIdSelective" parameterType="com.jvxie.report.models.Class">
    update class
    <set>
      <if test="abbrName != null">
        abbr_name = #{abbrName,jdbcType=VARCHAR},
      </if>
      <if test="num != null">
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="gradeId != null">
        grade_id = #{gradeId,jdbcType=INTEGER},
      </if>
      <if test="majorId != null">
        major_id = #{majorId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
    and deleted_at is null
  </update>
</mapper>